plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

repositories {
	mavenCentral()
}

group = 'com.workbook.crane'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

apply plugin: 'org.springframework.boot'
apply plugin : "io.spring.dependency-management"

dependencies {
	/* database & orm */
//	implementation 'mysql:mysql-connector-java'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'junit:junit:4.13.1'
	annotationProcessor "com.querydsl:querydsl-apt::jpa"
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	/*엑셀추출 및 메일 전송*/
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
	implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
	implementation group: 'javax.mail', name: 'mail', version: '1.4.7'
	implementation group: 'javax.activation', name: 'activation', version: '1.1.1'
	/* */
	implementation group: 'io.kubernetes', name: 'client-java', version: '11.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'commons-codec:commons-codec:1.14'
	implementation 'org.apache.httpcomponents:httpclient:4.5.11'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	/* rest api */
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'

	/* swagger + bean validation */
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-bean-validators:3.0.0'
	implementation 'javax.validation:validation-api:2.0.1.Final'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}